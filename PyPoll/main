# Import necessary modules
import csv
import os

# Files to load and output (update with correct file paths)
file_to_load = os.path.join("PyPoll", "resources", "election_data.csv")  # Input file path
file_to_output = os.path.join("PyPoll", "analysis", "election_analysis.txt")  # Output file path

# Initialize variables to track the election data
total_votes = 0  # Track the total number of votes cast

# Define lists and dictionaries to track candidate names and vote counts
candidates={}


# Winning Candidate and Winning Count Tracker
winner={"name": "", "votes":0}

# Open the CSV file and process it

with open(file_to_load) as election_data:
    reader = csv.reader(election_data)

    # Skip the header row
    header = next(reader)
    candidate_index=header.index("Candidate")
    # Loop through each row of the dataset and process it
    for row in reader:
        # Print a loading indicator (for large datasets)
        print(". ", end="")
        # Increment the total vote count for each row
        total_votes += 1
        # Get the candidate's name from the row
        candidate=row[candidate_index]
        

        # If the candidate is not already in the candidate list, add them
        if candidate not in candidates:
            candidates[candidate]=0 

        # Add a vote to the candidate's count
        candidates[candidate] += 1

# Open a text file to save the output
with open(file_to_output, "w") as txt_file:

    # Print the total vote count (to terminal)
    print(f'Total Number of Votes: {total_votes}')

    # Write the total vote count to the text file
    txt_file.write(f'Total Number of Votes: {total_votes}')



    # Loop through the candidates to determine vote percentages and identify the winner
    for candidate, votes in candidates.items():
        # Get the vote count and calculate the percentage
        percentage=(votes/total_votes)*100

        # Update the winning candidate if this one has more votes
        if votes>winner["votes"]:
            winner["name"]=candidate
            winner["votes"]=votes

        # Print and save each candidate's vote count and percentage
        candidate_results=f'{candidate}: {percentage:.3f}% ({votes})\n'
        print(candidate_results, end="")
        txt_file.write(candidate_results)

    # Generate and print the winning candidate summary
    winning_summary=(
        f'Winner: {winner["name"]}\n'
        f'Winning Vote Count: {winner["votes"]}\n'
        f'Winning Percentage: {percentage:.3f}%\n')
    print(winning_summary)

    # Save the winning candidate summary to the text file
    txt_file.write(winning_summary)

print("Results have been written to election_analysis.txt")